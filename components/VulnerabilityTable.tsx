"use client";

import React from "react";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { NessusVulnerability } from "@/types/nessus";

interface VulnerabilityTableProps {
  title: string;
  vulnerabilities: NessusVulnerability[];
  loading?: boolean;
}

const getSeverityText = (severity: number) => {
  switch (severity) {
    case 4: return "Critical";
    case 3: return "High";
    case 2: return "Medium";
    case 1: return "Low";
    case 0: return "Info";
    default: return "Unknown";
  }
};

const getSeverityColor = (severity: number) => {
  switch (severity) {
    case 4: return "destructive";
    case 3: return "destructive";
    case 2: return "default";
    case 1: return "secondary";
    case 0: return "outline";
    default: return "outline";
  }
};

// Explicit Tailwind colors so exported HTML (Tailwind CDN) shows colored badges
const getSeverityClasses = (severity: number) => {
  switch (severity) {
    case 4: // Critical
      return "bg-red-600 text-white border-transparent";
    case 3: // High
      return "bg-orange-500 text-white border-transparent";
    case 2: // Medium
      return "bg-amber-400 text-black border-transparent";
    case 1: // Low
      return "bg-blue-500 text-white border-transparent";
    case 0: // Info
      return "bg-gray-400 text-black border-transparent";
    default:
      return "bg-gray-300 text-black border-transparent";
  }
};

export function VulnerabilityTable({ title, vulnerabilities, loading = false }: VulnerabilityTableProps) {
  return (
    <Card className="h-full">
      <CardHeader>
        <CardTitle>{title}</CardTitle>
        <p className="text-sm text-muted-foreground">
          {vulnerabilities.length} vulnerabilities
        </p>
      </CardHeader>
      <CardContent className="p-0">
          <Table>
            <TableHeader className="sticky top-0 z-10 bg-muted/50 backdrop-blur supports-[backdrop-filter]:bg-muted/30">
              <TableRow>
                <TableHead>Plugin ID</TableHead>
                <TableHead>Plugin Name</TableHead>
                <TableHead>Family</TableHead>
                <TableHead>Severity</TableHead>
                <TableHead>CVSS Score</TableHead>
                <TableHead>CVE</TableHead>
                <TableHead>Port</TableHead>
                <TableHead>Service</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {loading ? (
                <TableRow>
                  <TableCell colSpan={8} className="text-center py-8">
                    Loading vulnerabilities...
                  </TableCell>
                </TableRow>
              ) : vulnerabilities.length === 0 ? (
                <TableRow>
                  <TableCell colSpan={8} className="text-center py-8 text-muted-foreground">
                    No vulnerabilities found
                  </TableCell>
                </TableRow>
              ) : (
                vulnerabilities.map((vuln) => (
                  <TableRow key={vuln.id} className="odd:bg-muted/30">
                    <TableCell className="font-medium">{vuln.pluginId}</TableCell>
                    <TableCell className="max-w-xs truncate" title={vuln.pluginName}>
                      {vuln.pluginName}
                    </TableCell>
                    <TableCell>{vuln.pluginFamily}</TableCell>
                    <TableCell>
                      <Badge
                        variant={"outline"}
                        className={getSeverityClasses(vuln.severity)}
                        title={getSeverityText(vuln.severity)}
                      >
                        {getSeverityText(vuln.severity)}
                      </Badge>
                    </TableCell>
                    <TableCell>{vuln.cvssScore?.toFixed(1) || "N/A"}</TableCell>
                    <TableCell className="max-w-xs truncate" title={vuln.cve || undefined}>
                      {vuln.cve || "N/A"}
                    </TableCell>
                    <TableCell>{vuln.port || "N/A"}</TableCell>
                    <TableCell>{vuln.service || "N/A"}</TableCell>
                  </TableRow>
                ))
              )}
            </TableBody>
          </Table>
      </CardContent>
    </Card>
  );
}
